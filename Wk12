import pandas as pd

# Converting 'odor' and 'gill-color' to dummy variables
df_with_dummies = pd.get_dummies(df, columns=['odor', 'gill-color'])

from sklearn.model_selection import train_test_split

X = df_with_dummies.drop('class', axis=1)  # Features
y = df_with_dummies['class']  # Target variable

# Splitting the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

from sklearn.ensemble import RandomForestClassifier

# Initializing the classifier
clf = RandomForestClassifier(random_state=42)

# Training the classifier
clf.fit(X_train, y_train)

from sklearn.metrics import accuracy_score

# Predicting the class labels for the test set
y_pred = clf.predict(X_test)

# Calculating the accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f'Model Accuracy: {accuracy:.2f}')

importances = clf.feature_importances_

# Mapping the feature importances to the corresponding columns
feature_importance_dict = dict(zip(X.columns, importances))
sorted_importance = sorted(feature_importance_dict.items(), key=lambda x: x[1], reverse=True)

# Displaying the most important features
print("Most important features:")
for feature, importance in sorted_importance[:10]:
    print(f"{feature}: {importance:.4f}")
